#version 450 core

uniform vec3 lightColor;
uniform vec3 objectColor;
uniform vec3 lightPosition;

in vec3 vNormal;
in vec4 fragPosition;

out vec4 color;

void main() {
    float ambientIntensity = 0.1;
    vec3 ambient = ambientIntensity * lightColor;

    vec3 lightDir = normalize(lightPosition - vec3(fragPosition.xyz));
    vec3 norm = normalize(vNormal);

    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor;

    color = vec4((ambient + diffuse) * objectColor, 1.0);
}
